{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"activerecord-postgres-earthdistance","body":"#ActiveRecord + PostgreSQL Earthdistance [![Build Status](https://secure.travis-ci.org/softa/activerecord-postgres-earthdistance.png?branch=master)](http://travis-ci.org/softa/activerecord-postgres-earthdistance)\r\n\r\nCheck distances with latitude and longitude using PostgreSQL special indexes.\r\nThis gem enables your model to query the database using the earthdistance extension. This should be much faster than using trigonometry functions over standart indexs.\r\n\r\n##Requirements\r\n\r\nPostgresql 9.1+ with contrib and Rails 3.1+\r\nOn Ubuntu, this is easy: `sudo apt-get install postgresql-contrib-9.1`\r\n\r\nOn Mac you have a couple of options:\r\n\r\n* [the binary package kindly provided by EnterpriseDB](http://www.enterprisedb.com/products-services-training/pgdownload#osx)\r\n* [Homebrew’s](https://github.com/mxcl/homebrew) Postgres installation also includes the contrib packages: `brew install postgres`\r\n* [Postgres.app](http://postgresapp.com/)\r\n\r\n##Install\r\n\r\n\r\nEarthdistance is a PostgreSQL contrib module, [check it out first](http://www.postgresql.org/docs/9.2/static/earthdistance.html).\r\n\r\nThen, just add this to your Gemfile:\r\n\r\n`gem 'activerecord-postgres-earthdistance'`\r\n\r\nAnd run your bundler:\r\n\r\n`bundle install`\r\n\r\nNow you need to create a migration that adds earthdistance support for your\r\nPostgreSQL database:\r\n\r\n`rails g earthdistance:setup`\r\n\r\nRun it:\r\n\r\n`rake db:migrate`\r\n\r\nNow let's add some gist indexes to make queries ultra-fast.\r\nFor the model Place we could create an index over the lat and lng fields:\r\n\r\n`rails g migration add_index_to_places`\r\n\r\nEdit the created migration:\r\n\r\n```ruby\r\nclass AddIndexToPlaces < ActiveRecord::Migration\r\n  def change\r\n    add_earthdistance_index :places\r\n  end \r\nend\r\n```\r\n\r\nThis will create the index with a SQL like this:\r\n```sql\r\nCREATE INDEX places_earthdistance_ix ON places USING GIST (ll_to_earth(lat, lng));\r\n```\r\n\r\n##Usage\r\n\r\nThis gem only provides a custom serialization coder.\r\nIf you want to use it just put in your Gemfile:\r\n\r\n    gem 'activerecord-postgres-earthdistance'\r\n\r\nNow add a line (for each earthdistance column) on the model you have your earthdistance columns.\r\nAssuming a model called **Person**, with a **data** field on it, the\r\ncode should look like:\r\n\r\n```ruby\r\nclass Place < ActiveRecord::Base\r\n  acts_as_geolocated\r\nend\r\n```\r\n\r\nThis way, you will automatically look for columns with names such as lat/latitude and lng/longitude.\r\nBut you can use alternative names passing them as:\r\n\r\n```ruby\r\nclass Place < ActiveRecord::Base\r\n  acts_as_geolocated lat: 'latitude_column_name', lng: 'longitude_column_name'\r\nend\r\n```\r\n\r\n###Querying the database\r\n\r\nTo query for all places within a given radius of 100 meters from the origin 30,50 just use:\r\n```ruby\r\nPlace.within_radius(500, 30, 50).all\r\n```\r\n\r\n##Test Database\r\n\r\nTo have earthdistance enabled when you load your database schema (as happens in rake db:test:prepare), you\r\nhave two options.\r\n\r\nThe first option is creating a template database with earthdistance installed and set the template option\r\nin database.yml to that database.\r\n\r\nThe second option is to uncomment or add the following line in config/application.rb\r\n\r\n    config.active_record.schema_format = :sql\r\n\r\nThis will change your schema dumps from Ruby to SQL. If you're\r\nunsure about the implications of this change, we suggest reading this\r\n[Rails Guide](http://guides.rubyonrails.org/migrations.html#schema-dumping-and-you).\r\n\r\n##Help\r\n\r\nYou can use issues in github for that. Or else you can reach us at\r\ntwitter: [@dbiazus](https://twitter.com/#!/dbiazus) \r\n\r\n##Note on Patches/Pull Requests\r\n\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don’t break it in a future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n\r\n##Copyright\r\n\r\nCopyright © 2010 Diogo Biazus. See LICENSE for details.\r\n","google":"","tagline":"Search records with latitude and longitude within a radius"}